{"ast":null,"code":"import _defineProperty from \"/Users/giannadelacruz/Desktop/boozer-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/Users/giannadelacruz/Desktop/boozer-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/giannadelacruz/Desktop/boozer-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/giannadelacruz/Desktop/boozer-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/giannadelacruz/Desktop/boozer-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/giannadelacruz/Desktop/boozer-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/giannadelacruz/Desktop/boozer-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/giannadelacruz/Desktop/boozer-frontend/src/components/NewCocktailForm.js\";\nimport React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport ProportionsInput from '../containers/ProportionsInput';\n\nvar NewCocktailForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NewCocktailForm, _Component);\n\n  function NewCocktailForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, NewCocktailForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NewCocktailForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      name: \"\",\n      description: \"\",\n      instructions: \"\",\n      proportions: [{\n        ingredient: \"\",\n        amount: \"\"\n      }] // This function below is handling any change in the input field. Main takeaway: if the input changes we're handling are coming from the \"ingredient \" and the \"amount\" inputs, we're creating a copy of the array of our state's proportions, going into that array, and saying set the respective input fields with their respective values\n\n    };\n\n    _this.changeHandler = function (e) {\n      if ([\"ingredient\", \"amount\"].includes(e.target.name)) {\n        var proportions = _toConsumableArray(_this.state.proportions);\n\n        proportions[e.target.dataset.id][e.target.name] = e.target.value;\n\n        _this.setState({\n          proportions: proportions\n        });\n      } else {\n        _this.setState(_defineProperty({}, e.target.name, e.target.value));\n      }\n    };\n\n    _this.addProportion = function (e) {\n      e.preventDefault();\n\n      _this.setState(function (prevState) {\n        return {\n          proportions: [].concat(_toConsumableArray(prevState.proportions), [{\n            ingredient: \"\",\n            amount: \"\"\n          }])\n        };\n      });\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      var newCocktail = _this.state;\n\n      _this.props.createNewCocktail(newCocktail);\n    };\n\n    _this.hideForm = function () {\n      _this.props.hideForm();\n    };\n\n    return _this;\n  }\n\n  _createClass(NewCocktailForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          name = _this$state.name,\n          description = _this$state.description,\n          instructions = _this$state.instructions,\n          proportions = _this$state.proportions;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"NEW COCKTAIL\"), React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Name: \", React.createElement(\"input\", {\n        onChange: this.changeHandler,\n        type: \"text\",\n        name: \"name\",\n        value: name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), \"Description: \", React.createElement(\"input\", {\n        onChange: this.changeHandler,\n        className: \"textbox\",\n        type: \"text\",\n        name: \"description\",\n        value: description,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), \"Instructions: \", React.createElement(\"input\", {\n        onChange: this.changeHandler,\n        className: \"textbox\",\n        type: \"text\",\n        name: \"instructions\",\n        value: instructions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), \"Proportions:\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(ProportionsInput, {\n        changeHandler: this.changeHandler,\n        proportions: proportions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.addProportion,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        alt: \"addCocktailProportion\",\n        className: \"addCocktailProportion\",\n        src: \"https://cdn4.iconfinder.com/data/icons/keynote-and-powerpoint-icons/256/Plus-512.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        className: \"Submit\",\n        type: \"submit\",\n        value: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        className: \"hideForm\",\n        onClick: this.hideForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Hide Form\"));\n    }\n  }]);\n\n  return NewCocktailForm;\n}(Component);\n\nexport { NewCocktailForm as default };","map":{"version":3,"sources":["/Users/giannadelacruz/Desktop/boozer-frontend/src/components/NewCocktailForm.js"],"names":["React","Component","Link","ProportionsInput","NewCocktailForm","state","name","description","instructions","proportions","ingredient","amount","changeHandler","e","includes","target","dataset","id","value","setState","addProportion","preventDefault","prevState","handleSubmit","newCocktail","props","createNewCocktail","hideForm"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport { Link } from \"react-router-dom\";\nimport ProportionsInput from '../containers/ProportionsInput'\n\nexport default class NewCocktailForm extends Component {\n\n  state = {\n    name: \"\",\n    description: \"\",\n    instructions: \"\",\n    proportions: [{\n      ingredient: \"\",\n      amount: \"\"\n    }]\n  }\n\n// This function below is handling any change in the input field. Main takeaway: if the input changes we're handling are coming from the \"ingredient \" and the \"amount\" inputs, we're creating a copy of the array of our state's proportions, going into that array, and saying set the respective input fields with their respective values\n  changeHandler = (e) => {\n    if ([\"ingredient\", \"amount\"].includes(e.target.name) ) {\n     let proportions = [...this.state.proportions]\n\n     proportions[e.target.dataset.id][e.target.name] = e.target.value\n\n     this.setState({\n       proportions: proportions\n     })\n   }\n    else {\n      this.setState({\n        [e.target.name] : e.target.value\n      })\n    }\n\n  }\n\n// Adding the proportion that was just written to an array of proportions of the state while leaving space for another one to be added\n\n  addProportion = (e) => {\n    e.preventDefault()\n    this.setState((prevState) => ({\n      proportions: [...prevState.proportions, {ingredient: \"\", amount: \"\"}]\n    }))\n  }\n\n  // handleSubmit --> send the whole state up to the CocktailContainer, cuz Daddy gotta deal w that\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n    let newCocktail = this.state\n    this.props.createNewCocktail(newCocktail)\n\n  }\n\n  hideForm = () => {\n    this.props.hideForm()\n  }\n\n  render(){\n\n    let {name, description, instructions, proportions} = this.state\n\n    return(\n      <div>\n        <h2>\n          NEW COCKTAIL\n        </h2>\n        <form onSubmit = {this.handleSubmit}>\n          Name: <input onChange = {this.changeHandler} type= \"text\" name= \"name\" value = {name} />\n\n          Description: <input onChange = {this.changeHandler}  className= \"textbox\" type= \"text\" name= \"description\" value = {description} />\n\n          Instructions: <input onChange = {this.changeHandler} className= \"textbox\" type= \"text\" name=  \"instructions\" value = {instructions} />\n\n          Proportions:\n          <br/>\n\n            <ProportionsInput changeHandler = {this.changeHandler} proportions = {proportions} />\n\n            <button onClick = {this.addProportion}>\n                <img alt = \"addCocktailProportion\" className = \"addCocktailProportion\" src = \"https://cdn4.iconfinder.com/data/icons/keynote-and-powerpoint-icons/256/Plus-512.png\" />\n              </button>\n          <input className = \"Submit\" type= \"submit\" value= \"Submit\"/>\n\n          </form>\n          <button className = \"hideForm\" onClick = {this.hideForm}>\n            Hide Form\n          </button>\n      </div>\n    )\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}