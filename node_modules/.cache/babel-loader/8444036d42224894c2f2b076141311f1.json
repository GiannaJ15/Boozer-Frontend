{"ast":null,"code":"import _toConsumableArray from \"/Users/giannadelacruz/Desktop/boozer-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/giannadelacruz/Desktop/boozer-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/giannadelacruz/Desktop/boozer-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/giannadelacruz/Desktop/boozer-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/giannadelacruz/Desktop/boozer-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/giannadelacruz/Desktop/boozer-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/giannadelacruz/Desktop/boozer-frontend/src/containers/CocktailContainer.js\";\nimport React, { Component } from 'react';\nimport CocktailList from '../components/CocktailList';\nimport CocktailCard from '../components/CocktailCard';\nimport { Route, Switch } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport Modal from '../components/Modal';\nimport NewCocktailForm from \"../components/NewCocktailForm\";\n\nvar CocktailContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CocktailContainer, _Component);\n\n  function CocktailContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CocktailContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CocktailContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      cocktails: [],\n      fullCocktailObjs: [],\n      displayForm: false,\n      ingredients: [],\n      cocktailProportions: [],\n      newCocktail: null,\n      showModal: false,\n      modalCocktail: null // displayForm as a state so we know whether or not to render the form based on whether the cocktailAddBtn was clicked\n\n    };\n\n    _this.fetchIngredients = function () {\n      fetch('http://localhost:3000/api/v1/ingredients').then(function (resp) {\n        return resp.json();\n      }).then(function (ingredients) {\n        _this.setState({\n          ingredients: ingredients\n        });\n      });\n    };\n\n    _this.alphabetizeAndSetState = function (cocktails) {\n      var alphabetizedCocktails = cocktails.sort(function (a, b) {\n        if (a.name.toUpperCase() < b.name.toUpperCase()) {\n          return -1;\n        } else if (a > b) {\n          return 1;\n        } else {\n          return 0;\n        }\n      });\n\n      _this.setState({\n        cocktails: alphabetizedCocktails\n      });\n    };\n\n    _this.addNewCocktail = function (clicked) {\n      _this.setState({\n        displayForm: !_this.state.displayForm\n      });\n    };\n\n    _this.createNewCocktail = function (cocktailObj) {\n      fetch('http://localhost:3000/api/v1/cocktails/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: cocktailObj.name,\n          description: cocktailObj.description,\n          instructions: cocktailObj.instructions,\n          source: \"Created By User\"\n        })\n      }).then(function (resp) {\n        return resp.json();\n      }).then(function (cocktailResponse) {\n        _this.postIngredients(cocktailResponse, cocktailObj);\n      });\n    };\n\n    _this.postIngredients = function (cocktailResponse, cocktailObj) {\n      console.log(\"ingredients being posted\", \"cocktailResponse:\", cocktailResponse, \"cocktail Object:\", cocktailObj);\n      var cocktailProportions = [];\n      cocktailObj.proportions.map(function (proportion) {\n        var savedIngredient = _this.state.ingredients.filter(function (ingredient) {\n          return proportion.ingredient === ingredient.name;\n        });\n\n        var obj = {}; // if the ingredient does exist in our database already:\n\n        if (savedIngredient.length !== 0) {\n          obj[\"ingredient\"] = savedIngredient;\n          obj[\"amount\"] = proportion.amount;\n          cocktailProportions.push(obj);\n        } // if the ingredient is not in our database, we're going to post it there\n\n\n        if (savedIngredient.length === 0) {\n          fetch('http://localhost:3000/api/v1/ingredients', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              name: proportion.ingredient\n            })\n          }).then(function (resp) {\n            return resp.json();\n          }).then(function (ingredient) {\n            var ingredientArray = [];\n            ingredientArray.push(ingredient);\n            obj[\"ingredient\"] = ingredientArray;\n            obj[\"amount\"] = proportion.amount;\n            cocktailProportions.push(obj);\n          });\n        }\n      }); // setstate to CocktailProportions so that we can acess this array later\n\n      _this.setState({\n        cocktailProportions: cocktailProportions\n      }, function () {\n        console.log(\"SETTING PROPORTIONS\");\n\n        _this.postProportions(cocktailResponse);\n      });\n    };\n\n    _this.postProportions = function (cocktailResponse) {\n      _this.state.cocktailProportions.map(function (proportion) {\n        console.log(\"PROPORTIONS\", proportion, proportion.amount, cocktailResponse.id, proportion.ingredient[0].id);\n        return fetch('http://localhost:3000/api/v1/proportions', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            amount: proportion.amount,\n            cocktail_id: cocktailResponse.id,\n            ingredient_id: proportion.ingredient[0].id\n          })\n        }).then(function (resp) {\n          return resp.json();\n        }).then(function () {\n          _this.setState({\n            cocktails: [].concat(_toConsumableArray(_this.state.cocktails), [cocktailResponse]) // newCocktail: cocktailResponse\n\n          });\n\n          var name = cocktailResponse.name;\n          window.location.replace(\"http://localhost:3001/cocktails/\".concat(name));\n        });\n      });\n    };\n\n    _this.hideForm = function () {\n      _this.setState({\n        displayForm: false\n      });\n    };\n\n    _this.openModal = function (cocktail) {\n      _this.setState({\n        showModal: true,\n        modalCocktail: cocktail\n      });\n    };\n\n    _this.hideModal = function () {\n      _this.setState({\n        showModal: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(CocktailContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('http://localhost:3000/api/v1/cocktails').then(function (resp) {\n        return resp.json();\n      }).then(function (cocktails) {\n        return _this2.alphabetizeAndSetState(cocktails);\n      }).then(this.fetchIngredients); // .then(this.fetchFullCocktails)\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"cocktailContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(CocktailList, {\n        cocktails: this.state.cocktails,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }), this.state.showModal && React.createElement(Modal, {\n        cocktail: this.state.modalCocktail,\n        hideModal: this.hideModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }), React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/cocktails/:name\",\n        render: function render(props) {\n          var cocktail = _toConsumableArray(_this3.state.cocktails).filter(function (cocktail) {\n            return cocktail.name === props.match.params.name;\n          });\n\n          return React.createElement(CocktailCard, {\n            openModal: _this3.openModal,\n            cocktail: cocktail[0],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 220\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/cocktails\",\n        render: function render() {\n          return React.createElement(Home, {\n            displayForm: _this3.state.displayForm,\n            cocktails: _this3.state.cocktails,\n            addNewCocktail: _this3.addNewCocktail,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 230\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"newCocktailForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, this.state.displayForm && React.createElement(NewCocktailForm, {\n        hideForm: this.hideForm,\n        createNewCocktail: this.createNewCocktail,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return CocktailContainer;\n}(Component);\n\nexport { CocktailContainer as default };","map":{"version":3,"sources":["/Users/giannadelacruz/Desktop/boozer-frontend/src/containers/CocktailContainer.js"],"names":["React","Component","CocktailList","CocktailCard","Route","Switch","Home","Modal","NewCocktailForm","CocktailContainer","state","cocktails","fullCocktailObjs","displayForm","ingredients","cocktailProportions","newCocktail","showModal","modalCocktail","fetchIngredients","fetch","then","resp","json","setState","alphabetizeAndSetState","alphabetizedCocktails","sort","a","b","name","toUpperCase","addNewCocktail","clicked","createNewCocktail","cocktailObj","method","headers","body","JSON","stringify","description","instructions","source","cocktailResponse","postIngredients","console","log","proportions","map","proportion","savedIngredient","filter","ingredient","obj","length","amount","push","ingredientArray","postProportions","id","cocktail_id","ingredient_id","window","location","replace","hideForm","openModal","cocktail","hideModal","props","match","params"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport CocktailList from '../components/CocktailList';\nimport CocktailCard from '../components/CocktailCard'\nimport { Route, Switch } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport Modal from '../components/Modal'\n\nimport NewCocktailForm from \"../components/NewCocktailForm\"\n\n\nexport default class CocktailContainer extends Component {\n\n  state = {\n    cocktails: [],\n    fullCocktailObjs: [],\n    displayForm: false,\n    ingredients: [],\n    cocktailProportions: [],\n    newCocktail: null,\n    showModal: false,\n    modalCocktail: null\n  }\n\n  // displayForm as a state so we know whether or not to render the form based on whether the cocktailAddBtn was clicked\n\n\n  componentDidMount() {\n    fetch('http://localhost:3000/api/v1/cocktails')\n      .then(resp => resp.json())\n        .then(cocktails =>\n          this.alphabetizeAndSetState(cocktails)\n          )\n            .then(this.fetchIngredients)\n                // .then(this.fetchFullCocktails)\n  }\n\n\n  fetchIngredients = () => {\n    fetch('http://localhost:3000/api/v1/ingredients')\n      .then(resp => resp.json())\n        .then(ingredients => {\n          this.setState({\n            ingredients: ingredients\n          })\n        })\n  }\n\n\n\n  // fetchFullCocktails = () => {\n  //   this.state.cocktails.map(cocktail => {\n  //     fetch(`http://localhost:3000/api/v1/cocktails/${cocktail.id}`)\n  //       .then(resp => resp.json())\n  //         .then((cocktailObj) => {\n  //           this.setState({\n  //             fullCocktailObjs: [...this.state.fullCocktailObjs, cocktailObj]\n  //           })\n  //         })\n  //     })\n  // }\n\n\n  alphabetizeAndSetState = (cocktails) => {\n    let alphabetizedCocktails = cocktails.sort((a, b) => {\n      if (a.name.toUpperCase() < b.name.toUpperCase()) {\n        return -1\n      }\n      else if (a > b) {\n        return 1}\n      else {\n      return 0;\n    }\n    })\n    this.setState({\n      cocktails: alphabetizedCocktails\n    })\n  }\n\n\n  addNewCocktail = (clicked) => {\n      this.setState({\n        displayForm: !this.state.displayForm\n      })\n  }\n\n  createNewCocktail = (cocktailObj) => {\n    fetch('http://localhost:3000/api/v1/cocktails/', {\n      method: 'POST',\n      headers: {'Content-Type' : 'application/json'},\n      body: JSON.stringify({\n        name: cocktailObj.name,\n        description: cocktailObj.description,\n        instructions: cocktailObj.instructions,\n        source: \"Created By User\"\n      })\n    })\n      .then(resp => resp.json())\n          .then((cocktailResponse) => {\n            this.postIngredients(cocktailResponse, cocktailObj)\n          })\n  }\n\n  postIngredients = (cocktailResponse, cocktailObj) => {\n    console.log(\"ingredients being posted\", \"cocktailResponse:\", cocktailResponse, \"cocktail Object:\" , cocktailObj)\n    let cocktailProportions = []\n      cocktailObj.proportions.map(proportion => {\n        let savedIngredient = this.state.ingredients.filter(ingredient => {\n        return proportion.ingredient === ingredient.name\n        })\n\n        let obj = {}\n\n        // if the ingredient does exist in our database already:\n        if (savedIngredient.length !== 0){\n          obj[\"ingredient\"] = savedIngredient\n          obj[\"amount\"] = proportion.amount\n        cocktailProportions.push(obj)\n        }\n\n        // if the ingredient is not in our database, we're going to post it there\n        if (savedIngredient.length === 0) {\n          fetch('http://localhost:3000/api/v1/ingredients', {\n            method: 'POST',\n            headers: {'Content-Type' : 'application/json'},\n            body: JSON.stringify({\n              name: proportion.ingredient\n            })\n          })\n            .then(resp => resp.json())\n              .then(ingredient => {\n                let ingredientArray = []\n                ingredientArray.push(ingredient)\n                obj[\"ingredient\"] = ingredientArray\n                obj[\"amount\"] = proportion.amount\n                cocktailProportions.push(obj)\n              })\n\n            }\n    })\n    // setstate to CocktailProportions so that we can acess this array later\n    this.setState({\n      cocktailProportions: cocktailProportions\n    }, () => {\n      console.log(\"SETTING PROPORTIONS\")\n      this.postProportions(cocktailResponse)\n    })\n  }\n\n\n  postProportions = (cocktailResponse) => {\n      this.state.cocktailProportions.map(proportion => {\n        console.log(\"PROPORTIONS\", proportion, proportion.amount, cocktailResponse.id, proportion.ingredient[0].id)\n        return (\n          fetch('http://localhost:3000/api/v1/proportions', {\n            method: 'POST',\n            headers: {'Content-Type' : 'application/json'},\n            body: JSON.stringify({\n              amount: proportion.amount,\n              cocktail_id: cocktailResponse.id,\n              ingredient_id: proportion.ingredient[0].id\n            })\n          })\n          .then(resp => resp.json())\n            .then(() => {\n              this.setState({\n                cocktails: [...this.state.cocktails, cocktailResponse],\n              // newCocktail: cocktailResponse\n              })\n              let name = cocktailResponse.name\n              window.location.replace(`http://localhost:3001/cocktails/${name}`)\n            }\n          )\n        )\n\n      })\n\n  }\n\n  // setStateBack = () => {\n  //   this.setState({\n  //     newCocktail: null\n  //   })\n  // }\n\n  hideForm = () => {\n    this.setState({\n      displayForm: false\n    })\n  }\n\n  openModal = (cocktail) => {\n    this.setState({\n      showModal: true,\n      modalCocktail: cocktail\n    })\n  }\n\n  hideModal = () => {\n    this.setState({\n      showModal: false\n    })\n  }\n\n  render() {\n      return (\n        <div className = \"cocktailContainer\">\n          <CocktailList cocktails = {this.state.cocktails}/>\n          {this.state.showModal && <Modal cocktail = {this.state.modalCocktail} hideModal = {this.hideModal}/>}\n          <Switch>\n\n                  <Route\n                    exact path= \"/cocktails/:name\"\n                    render = {props => {\n\n                        let cocktail = [...this.state.cocktails].filter(cocktail  => {\n                        return cocktail.name === props.match.params.name\n                        });\n\n                        return(\n                        <CocktailCard  openModal = {this.openModal} cocktail = {cocktail[0]}/>\n\n                        )}}\n                    />\n\n\n                    <Route\n                       path = \"/cocktails\"\n                      render = {() => {\n                        return (\n                          <Home displayForm = {this.state.displayForm} cocktails = {this.state.cocktails} addNewCocktail = {this.addNewCocktail} />\n                        )\n                      }}\n                      />\n\n\n\n            </Switch>\n\n\n            <div className = \"newCocktailForm\">\n                {\n                  this.state.displayForm && <NewCocktailForm hideForm = {this.hideForm} createNewCocktail = {this.createNewCocktail}/>\n                }\n            </div>\n\n        </div>\n      )\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}