{"ast":null,"code":"import _classCallCheck from \"/Users/giannadelacruz/Desktop/boozer-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/giannadelacruz/Desktop/boozer-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/giannadelacruz/Desktop/boozer-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/giannadelacruz/Desktop/boozer-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/giannadelacruz/Desktop/boozer-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/giannadelacruz/Desktop/boozer-frontend/src/components/CocktailCard.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from \"react-router-dom\";\n\nvar CocktailCard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CocktailCard, _Component);\n\n  function CocktailCard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CocktailCard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CocktailCard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      cocktail: null // Using Component Will Receive Props because we want the card to listen for a change in the cocktail passed, so that it can go to the cocktail's show page on the api and grab dat full cocktail info-- still using Component Did Mount bc we want that initial render\n\n    };\n\n    _this.fetchCocktail = function (cocktail) {\n      fetch(\"http://localhost:3000/api/v1/cocktails/\".concat(cocktail.id)).then(function (resp) {\n        return resp.json();\n      }).then(function (cocktail) {\n        _this.setState({\n          cocktail: cocktail\n        });\n      });\n    };\n\n    _this.handleClick = function (e) {\n      fetch(\"http://localhost:3000/api/v1/cocktails/\".concat(_this.state.cocktail.id), {\n        method: 'DELETE'\n      }).then(function () {\n        return window.location.replace('http://localhost:3001/cocktails/');\n      });\n    };\n\n    _this.popModal = function () {\n      console.log(\"boutta sharee\");\n    };\n\n    _this.displayCocktailInfo = function () {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        alt: \"cocktail Icon\",\n        className: \"cocktailIconn\",\n        src: \"https://i.pinimg.com/originals/a7/14/92/a71492d902476558960513154243f86b.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        className: \"cocktailName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \" \", _this.state.cocktail.name.toUpperCase(), \" \")), React.createElement(\"h5\", {\n        className: \"cocktailDescription\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \" \", _this.state.cocktail.description, \" \"), React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \" \", _this.state.cocktail.instructions, \" \"), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \" Ingredients \"), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \" \", React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, _this.state.cocktail.proportions.map(function (proportion) {\n        return React.createElement(\"li\", {\n          key: proportion.ingredient_name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, proportion.amount, \" \", proportion.ingredient_name);\n      })), \" \"), React.createElement(\"button\", {\n        onClick: _this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \" Delete Cocktail \"), React.createElement(\"button\", {\n        onClick: _this.popModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \" Share with fellow BoozeR \"));\n    };\n\n    return _this;\n  }\n\n  _createClass(CocktailCard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.cocktail) {\n        this.fetchCocktail(this.props.cocktail);\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(newProps) {\n      if (this.props.cocktail !== newProps.cocktail) {\n        this.fetchCocktail(newProps.cocktail);\n      }\n    }\n  }, {\n    key: \"render\",\n    //Making sure there is a cocktail state, before going ahead and doing shit with the cocktail state. so it doesn't freak out n throw errors\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"cocktailCard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, this.state.cocktail && this.displayCocktailInfo());\n    }\n  }]);\n\n  return CocktailCard;\n}(Component);\n\nexport { CocktailCard as default };","map":{"version":3,"sources":["/Users/giannadelacruz/Desktop/boozer-frontend/src/components/CocktailCard.js"],"names":["React","Component","Redirect","CocktailCard","state","cocktail","fetchCocktail","fetch","id","then","resp","json","setState","handleClick","e","method","window","location","replace","popModal","console","log","displayCocktailInfo","name","toUpperCase","description","instructions","proportions","map","proportion","ingredient_name","amount","props","newProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Redirect} from \"react-router-dom\"\n\nexport default class CocktailCard extends Component {\n\n  state = {\n    cocktail: null\n  }\n\n// Using Component Will Receive Props because we want the card to listen for a change in the cocktail passed, so that it can go to the cocktail's show page on the api and grab dat full cocktail info-- still using Component Did Mount bc we want that initial render\n\n  componentDidMount () {\n    if (this.props.cocktail) {\n      this.fetchCocktail(this.props.cocktail)\n    }\n  }\n\n  componentWillReceiveProps(newProps) {\n    if (this.props.cocktail !== newProps.cocktail) {\n      this.fetchCocktail(newProps.cocktail)\n    }\n  }\n\n  fetchCocktail = (cocktail) => {\n    fetch(`http://localhost:3000/api/v1/cocktails/${cocktail.id}`)\n      .then(resp => resp.json())\n        .then((cocktail) => {\n          this.setState({\n            cocktail: cocktail\n          })\n        })\n  }\n\n  handleClick = (e) => {\n    fetch(`http://localhost:3000/api/v1/cocktails/${this.state.cocktail.id}`, {\n      method: 'DELETE'\n    }).then(() => window.location.replace('http://localhost:3001/cocktails/'))\n  }\n\n  popModal = () => {\n    console.log(\"boutta sharee\")\n  }\n\n  displayCocktailInfo = () => {\n\n    return(\n      <div>\n        <span>\n        <img alt = \"cocktail Icon\" className = \"cocktailIconn\" src=\"https://i.pinimg.com/originals/a7/14/92/a71492d902476558960513154243f86b.png\"/>\n        <h2 className= \"cocktailName\"> {this.state.cocktail.name.toUpperCase()} </h2>\n        </span>\n        <h5 className= \"cocktailDescription\"> {this.state.cocktail.description} </h5>\n        <h6> {this.state.cocktail.instructions} </h6>\n        <h3> Ingredients </h3>\n        <h5> <ul>\n          {this.state.cocktail.proportions.map(proportion => {\n            return (\n              <li key = {proportion.ingredient_name}>\n                {proportion.amount} {proportion.ingredient_name}\n               </li>\n            )\n          })}\n        </ul> </h5>\n        <button onClick = {this.handleClick}> Delete Cocktail </button>\n        <button onClick = {this.popModal}> Share with fellow BoozeR </button>\n      </div>\n    )\n  }\n\n\n//Making sure there is a cocktail state, before going ahead and doing shit with the cocktail state. so it doesn't freak out n throw errors\n  render() {\n    return(\n      <div className = \"cocktailCard\">\n        {\n          this.state.cocktail && this.displayCocktailInfo()\n        }\n      </div>\n    )\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}